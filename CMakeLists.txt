cmake_minimum_required(VERSION 3.0)

set(METABUF_LIBRARY_NAME metabuf)

PROJECT(metabuf)

OPTION(METABUF_EXTERNAL_BUILD "METABUF_EXTERNAL_BUILD" OFF)
OPTION(METABUF_METAGEN "METABUF_METAGEN" ON)
OPTION(METABUF_XML2METABUF "METABUF_XML2METABUF" OFF)
OPTION(METABUF_PUGIXML_EXTERNAL "METABUF_PUGIXML_EXTERNAL" OFF)
OPTION(METABUF_EXTERNAL_CONFIG "METABUF_EXTERNAL_CONFIG" OFF)
OPTION(METABUF_INSTALL "METABUF_INSTALL" OFF)
OPTION(METABUF_TEST "METABUF_TEST" ON)

set(METABUF_PUGIXML_INCLUDE_DIRS "" CACHE STRING "METABUF_PUGIXML_INCLUDE_DIRS")
set(METABUF_PUGIXML_LIBRARIES "" CACHE STRING "METABUF_PUGIXML_LIBRARIES")

IF(NOT METABUF_EXTERNAL_BUILD)
    if(${CMAKE_C_COMPILER_ID} STREQUAL Clang)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wextra -Werror")
    elseif(${CMAKE_C_COMPILER_ID} STREQUAL AppleClang)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wextra -Werror")
    elseif(${CMAKE_C_COMPILER_ID} STREQUAL GNU)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wextra -Werror")
    elseif(${CMAKE_C_COMPILER_ID} STREQUAL Intel)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wextra -Werror")
    elseif(${CMAKE_C_COMPILER_ID} STREQUAL MSVC)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4 /WX")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4710")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4738")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4820")
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /wd4711")
    endif()

    set(CMAKE_CXX_STANDARD 14)
    
    if(MSVC)
        add_definitions(-D_CRT_SECURE_NO_WARNINGS)
        add_definitions(-D_SCL_SECURE_NO_WARNINGS)

        set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MTd")
        set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT")
        set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "${CMAKE_CXX_FLAGS_RELWITHDEBINFO} /MT")

        set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} /MTd")
        set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} /MT")
        set(CMAKE_C_FLAGS_RELWITHDEBINFO "${CMAKE_C_FLAGS_RELWITHDEBINFO} /MT")    
    endif()
ENDIF()

IF(METABUF_EXTERNAL_CONFIG)
    add_definitions(-DMETABUF_EXTERNAL_CONFIG)
ENDIF()

set(METABUF_INCLUDE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/include)
set(METABUF_SOURCE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/src)

SET(METABUF_SOURCE_FILES ${METABUF_SOURCE_FILES} ${METABUF_INCLUDE_PATH}/config/Metaconfig.hpp)
SET(METABUF_SOURCE_FILES ${METABUF_SOURCE_FILES} ${METABUF_INCLUDE_PATH}/metabuf/Metadata.hpp)
SET(METABUF_SOURCE_FILES ${METABUF_SOURCE_FILES} ${METABUF_INCLUDE_PATH}/metabuf/Reader.hpp)
SET(METABUF_SOURCE_FILES ${METABUF_SOURCE_FILES} ${METABUF_SOURCE_PATH}/metabuf/Metadata.cpp)

INCLUDE_DIRECTORIES(${PROJECT_NAME} ${METABUF_INCLUDE_PATH})
INCLUDE_DIRECTORIES(${PROJECT_NAME} ${METABUF_SOURCE_PATH}/metabuf)

ADD_LIBRARY(${PROJECT_NAME} STATIC ${METABUF_SOURCE_FILES})

if(METABUF_INSTALL)
    install(DIRECTORY include
        DESTINATION .
        FILES_MATCHING PATTERN "*.hpp" PATTERN "*.h")

    install(TARGETS ${PROJECT_NAME}
        ARCHIVE DESTINATION lib)
endif()

if(METABUF_METAGEN OR METABUF_XML2METABUF)
    if(NOT METABUF_PUGIXML_EXTERNAL)
        include(cmake/pugixml_download.cmake)
        
        set(METABUF_PUGIXML_INCLUDE_DIRS ${pugixml_INCLUDE_DIR})
        set(METABUF_PUGIXML_LIBRARIES ${pugixml_LIBRARY_NAME})
    endif()
endif()

if(METABUF_METAGEN OR METABUF_XML2METABUF)
    #xml2metabuf
    
    PROJECT(xml2metabuf)
    
    set(XML2METABUF_SOURCE_FILES ${XML2METABUF_SOURCE_FILES} ${METABUF_SOURCE_PATH}/xml2metabuf/Xml2Metabuf.cpp)
    set(XML2METABUF_SOURCE_FILES ${XML2METABUF_SOURCE_FILES} ${METABUF_SOURCE_PATH}/xml2metabuf/Xml2Metabuf.hpp)
    set(XML2METABUF_SOURCE_FILES ${XML2METABUF_SOURCE_FILES} ${METABUF_SOURCE_PATH}/xml2metabuf/Xml2Metacode.cpp)
    set(XML2METABUF_SOURCE_FILES ${XML2METABUF_SOURCE_FILES} ${METABUF_SOURCE_PATH}/xml2metabuf/Xml2Metacode.hpp)
    set(XML2METABUF_SOURCE_FILES ${XML2METABUF_SOURCE_FILES} ${METABUF_SOURCE_PATH}/xml2metabuf/XmlProtocol.cpp)
    set(XML2METABUF_SOURCE_FILES ${XML2METABUF_SOURCE_FILES} ${METABUF_SOURCE_PATH}/xml2metabuf/XmlProtocol.hpp)
    
    INCLUDE_DIRECTORIES(${PROJECT_NAME} ${METABUF_INCLUDE_PATH})
    INCLUDE_DIRECTORIES(${PROJECT_NAME} ${METABUF_SOURCE_PATH}/xml2metabuf)
    INCLUDE_DIRECTORIES(${PROJECT_NAME} ${METABUF_PUGIXML_INCLUDE_DIRS})
    
    ADD_LIBRARY(${PROJECT_NAME} STATIC ${XML2METABUF_SOURCE_FILES})
    
    if(NOT METABUF_PUGIXML_EXTERNAL)
        add_dependencies(${PROJECT_NAME} pugixml_download)
    endif()
endif()

if(METABUF_METAGEN)
    #metagen

    PROJECT(metagen)
    
    set(METAGEN_SOURCE_FILES ${METAGEN_SOURCE_FILES} ${METABUF_SOURCE_PATH}/metagen/metagen.cpp)

    INCLUDE_DIRECTORIES(${PROJECT_NAME} ${METABUF_INCLUDE_PATH})
    INCLUDE_DIRECTORIES(${PROJECT_NAME} ${METABUF_SOURCE_PATH}/metagen)
    INCLUDE_DIRECTORIES(${PROJECT_NAME} ${METABUF_PUGIXML_INCLUDE_DIRS})
    
    ADD_EXECUTABLE(${PROJECT_NAME} ${METAGEN_SOURCE_FILES})

    if(WIN32)
        set_target_properties(${PROJECT_NAME} PROPERTIES LINK_FLAGS "/SUBSYSTEM:CONSOLE")
        set_target_properties(${PROJECT_NAME} PROPERTIES COMPILE_DEFINITIONS "_CONSOLE")
    endif()
    
    target_link_libraries(${PROJECT_NAME} metabuf xml2metabuf)
    target_link_libraries(${PROJECT_NAME} ${METABUF_PUGIXML_LIBRARIES})
    
    if(NOT METABUF_PUGIXML_EXTERNAL)
        add_dependencies(${PROJECT_NAME} pugixml_download)
    endif()
endif()

if(METABUF_TEST)
    include(CTest)
    enable_testing()

    add_subdirectory(tests)
endif(METABUF_TEST)