#pragma once

#include <stddef.h>

namespace Metabuf
{
    //////////////////////////////////////////////////////////////////////////
    typedef void * (*Metabuf_malloc_t)(size_t _size, void * _ud);
    typedef void (*Metabuf_free_t)(void * _ptr, void * _ud);
    //////////////////////////////////////////////////////////////////////////
    void set_Metabuf_allocator( Metabuf_malloc_t _malloc, Metabuf_free_t _free, void * _ud );
    //////////////////////////////////////////////////////////////////////////
    void * Metabuf_malloc( size_t _size );
    void Metabuf_free( void * _ptr );
    //////////////////////////////////////////////////////////////////////////
}
//////////////////////////////////////////////////////////////////////////
#ifndef METABUF_MALLOC
#define METABUF_MALLOC(S) (Metabuf::Metabuf_malloc(S))
#endif
//////////////////////////////////////////////////////////////////////////
#ifndef METABUF_FREE
#define METABUF_FREE(B, S) (Metabuf::Metabuf_free(B))
#endif
//////////////////////////////////////////////////////////////////////////